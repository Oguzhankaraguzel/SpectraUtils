<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpectraUtils</name>
    </assembly>
    <members>
        <member name="M:SpectraUtils.Abstract.INameEdit.NameCorrection(System.String)">
            <summary>
            Corrects the capitalization and removes spaces from a given name. (naME = Name).
            </summary>
            <param name="name">The name to be corrected.</param>
            <returns>The name with corrected capitalization.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.NameCorrection(System.String[])">
            <summary>
            Corrects the capitalization of multiple names and concatenates them into a single string.
            </summary>
            <param name="names">The names to be corrected.</param>
            <returns>The corrected names concatenated with spaces.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.SirNameCorrection(System.String)">
            <summary>
            Corrects the capitalization and removes spaces from a given sir name.
            </summary>
            <param name="sirName">The sir name to be corrected.</param>
            <returns>The corrected sir name without spaces and with uppercase letters.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.SirNameCorrection(System.String[])">
            <summary>
            Corrects the capitalization and removes spaces from one or more sir names.
            </summary>
            <param name="sirNames">The sir names to be corrected.</param>
            <returns>The corrected sir names without spaces and with uppercase letters.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.FullNameCorrection(System.String,System.String)">
            <summary>
            Corrects the capitalization and spaces in the given name and sir name, and concatenates them to form a full name.
            </summary>
            <param name="name">The name to be corrected.</param>
            <param name="sirName">The sir name to be corrected.</param>
            <returns>The corrected full name with proper capitalization and spacing.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.FullNameCorrection(System.String[],System.String[])">
            <summary>
            Corrects the capitalization and spacing of the given names and sir names, and concatenates them to form a full name.
            </summary>
            <param name="names">The names to be corrected.</param>
            <param name="sirNames">The sir names to be corrected.</param>
            <returns>The corrected full name with proper capitalization and spacing.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.StandardizeCharacters(System.String)">
            <summary>
            Standardizes and normalizes characters in the input string by removing diacritic marks.
            </summary>
            <param name="input">The input string to be standardized.</param>
            <returns>The standardized string without diacritic marks.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.INameEdit.CreateUserName(System.String)">
            <summary>
            Creates a user name by standardizing the given name and appending a four-digit random number.
            </summary>
            <param name="name">The name to create the user name from.</param>
            <returns>The generated user name.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.IPasswordHelper.CreatePassword(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a password with the specified length and character requirements.
            </summary>
            <param name="passwordLength">The length of the password to be generated.</param>
            <param name="includeUppercaseLetter">Determines whether to include uppercase letters in the password (default: true).</param>
            <param name="includeLowercaseLetter">Determines whether to include lowercase letters in the password (default: true).</param>
            <param name="includeSpecialCharacter">Determines whether to include special characters in the password (default: true).</param>
            <param name="includeNumber">Determines whether to include numbers in the password (default: true).</param>
            <returns>The generated password that meets the specified requirements.</returns>
        </member>
        <member name="M:SpectraUtils.Abstract.IPasswordHelper.HashPassword(System.String)">
            <summary>
            Hashes a password using the SHA-256 algorithm.
            </summary>
            <param name="password">The password to be hashed.</param>
            <returns>The hashed password as a hexadecimal string.</returns>
        </member>
        <member name="P:SpectraUtils.Abstract.IPasswordHelper.CreateStardartPassword">
            <summary>
            Gets a random standard password with a default length of 8 characters.
            </summary>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.NameCorrection(System.String)">
            <summary>
            Corrects the capitalization and removes spaces from a given name. (naME = Name).
            </summary>
            <param name="name">The name to be corrected.</param>
            <returns>The name with corrected capitalization.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.NameCorrection(System.String[])">
            <summary>
            Corrects the capitalization of multiple names and concatenates them into a single string.
            </summary>
            <param name="names">The names to be corrected.</param>
            <returns>The corrected names concatenated with spaces.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.SirNameCorrection(System.String)">
            <summary>
            Corrects the capitalization and removes spaces from a given sir name.
            </summary>
            <param name="sirName">The sir name to be corrected.</param>
            <returns>The corrected sir name without spaces and with uppercase letters.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.SirNameCorrection(System.String[])">
            <summary>
            Corrects the capitalization and removes spaces from one or more sir names.
            </summary>
            <param name="sirNames">The sir names to be corrected.</param>
            <returns>The corrected sir names without spaces and with uppercase letters.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.FullNameCorrection(System.String,System.String)">
            <summary>
            Corrects the capitalization and spaces in the given name and sir name, and concatenates them to form a full name.
            </summary>
            <param name="name">The name to be corrected.</param>
            <param name="sirName">The sir name to be corrected.</param>
            <returns>The corrected full name with proper capitalization and spacing.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.FullNameCorrection(System.String[],System.String[])">
            <summary>
            Corrects the capitalization and spacing of the given names and sir names, and concatenates them to form a full name.
            </summary>
            <param name="names">The names to be corrected.</param>
            <param name="sirNames">The sir names to be corrected.</param>
            <returns>The corrected full name with proper capitalization and spacing.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.StandardizeCharacters(System.String)">
            <summary>
            Standardizes and normalizes characters in the input string by removing diacritic marks.
            </summary>
            <param name="input">The input string to be standardized.</param>
            <returns>The standardized string without diacritic marks.</returns>
        </member>
        <member name="M:SpectraUtils.Concerete.NameEdit.CreateUserName(System.String)">
            <summary>
            Creates a user name by standardizing the given name and appending a four-digit random number.
            </summary>
            <param name="name">The name to create the user name from.</param>
            <returns>The generated user name.</returns>
        </member>
        <member name="P:SpectraUtils.Concrete.PasswordHelper.CreateStardartPassword">
            <summary>
            Gets a random standard password with a default length of 8 characters.
            </summary>
        </member>
        <member name="M:SpectraUtils.Concrete.PasswordHelper.CreatePassword(System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Creates a password with the specified length and character requirements.
            </summary>
            <param name="passwordLength">The length of the password to be generated.</param>
            <param name="includeUppercaseLetter">Determines whether to include uppercase letters in the password (default: true).</param>
            <param name="includeLowercaseLetter">Determines whether to include lowercase letters in the password (default: true).</param>
            <param name="includeSpecialCharacter">Determines whether to include special characters in the password (default: true).</param>
            <param name="includeNumber">Determines whether to include numbers in the password (default: true).</param>
            <returns>The generated password that meets the specified requirements.</returns>
        </member>
        <member name="M:SpectraUtils.Concrete.PasswordHelper.HashPassword(System.String)">
            <summary>
            Hashes a password using the SHA-256 algorithm.
            </summary>
            <param name="password">The password to be hashed.</param>
            <returns>The hashed password as a hexadecimal string.</returns>
        </member>
        <member name="M:AllowedExtensionsAttribute.#ctor(System.String[])">
            <summary>
            Initializes a new instance of the AllowedExtensionsAttribute class with the specified supported file extensions.
            </summary>
            <param name="extensions">The supported file extensions.</param>
        </member>
        <member name="M:AllowedExtensionsAttribute.#ctor(System.Int64,System.String[])">
            <summary>
            Initializes a new instance of the AllowedExtensionsAttribute class with the specified maximum file size and supported file extensions.
            </summary>
            <param name="maxFileSizeInBytes">The maximum file size allowed in bytes.</param>
            <param name="extensions">The supported file extensions.</param>
        </member>
    </members>
</doc>
